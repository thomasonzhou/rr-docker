name: docker

on:
    push:
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            matrix:
                platform:
                    - linux/amd64
                    - linux/arm64
                    # - linux/arm/v5
                    # - linux/arm/v7
        steps:
            - name: Set vars
              id: vars
              run: |
                  echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
                  echo "platform=$(echo -n ${{ matrix.platform }} | sed 's/\//-/g')" >> $GITHUB_OUTPUT

            - uses: actions/checkout@v3
            - uses: docker/setup-qemu-action@v2
            - uses: docker/setup-buildx-action@v2

            - name: Login to Github Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GH_TOKEN }}

            - name: Build docker images
              uses: docker/build-push-action@v3
              with:
                  context: .
                  push: true
                  platforms: ${{ matrix.platform }}
                  tags: |
                      ${{ env.GHCR_REPO }}:${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.platform }}

    release:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        needs: build
        steps:
            - name: Set vars
              id: vars
              run: |
                  echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

            # Removed Docker Hub login step

            - name: Login to Github Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GH_TOKEN }}

            # Removed Docker Hub manifest creation

            - name: Create GHCR manifest
              run: |
                  docker manifest create $GHCR_REPO:${{ steps.vars.outputs.version }} \
                    $GHCR_REPO:${{ steps.vars.outputs.version }}-linux-amd64 \
                    $GHCR_REPO:${{ steps.vars.outputs.version }}-linux-arm64 \
                    $GHCR_REPO:${{ steps.vars.outputs.version }}-linux-arm-v5 \
                    $GHCR_REPO:${{ steps.vars.outputs.version }}-linux-arm-v7

            - name: Push manifest
              run: |
                  docker manifest push $GHCR_REPO:${{ steps.vars.outputs.version }}
